openapi: 3.0.3
info:
  version: 1.0.0
  title: Taskusalkku API-spec

security:
  - bearer: []

paths:
  /v1/system/ping:
    get:
      security: []
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/funds:
    get:
      operationId: listFunds
      summary: List funds.
      description: Lists funds.
      tags:
        - Funds
      parameters:
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
      responses:
        "200":
          description: List of funds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Fund"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of funds with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/funds/{fundId}":
    get:
      operationId: findFund
      summary: Find a fund.
      description: Finds a fund by id.
      tags:
        - Funds
      parameters:
        - name: fundId
          required: true
          in: path
          description: fund id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Fund
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fund"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/funds/{fundId}/historicalValues":
    get:
      operationId: listHistoricalValues
      summary: Lists historical values
      description: Lists historical values
      tags:
        - Funds
      parameters:
        - name: fundId
          required: true
          in: path
          description: fund id
          schema:
            type: string
            format: uuid
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
        - name: startDate
          in: query
          description: Filter starting from this date
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Filter ending to this date
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of historical values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/HistoricalValue"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of funds with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
                
  /v1/portfolios:
    get:
      operationId: listPortfolios
      summary: List portfolios.
      description: Lists portfolios logged user has access to
      tags:
        - Portfolios
      responses:
        "200":
          description: List of portfolios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Portfolio"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}":
    get:
      operationId: findPortfolio
      summary: Find a portfolio.
      description: Finds a portfolio by id.
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Portfolio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Portfolio"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/summary":
    get:
      operationId: getPortfolioHSummary
      summary: Summary for portfolio summary
      description: Returns summary a portfolio history for given time range
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          required: true
          description: Start date for the date range
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: End date for the date range
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Portfolio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortfolioSummary"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/historyValues":
    get:
      operationId: listPortfolioHistoryValues
      summary: List portfolio history values.
      description: Lists portfolio history values
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          required: true
          description: Start date for the date range
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: End date for the date range
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of portfolio history values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortfolioHistoryValue"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/funds":
    get:
      operationId: listPortfolioFunds
      summary: Lists portfolio funds
      description: Returns list of portfolio funds
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of portfolio funds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortfolioFund"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Fund:
      type: object
      description: Fund object
      required:
        - name
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Fund object id in UUID format
        name:
          $ref: "#/components/schemas/LocalizedValue"
        longName:
          $ref: "#/components/schemas/LocalizedValue"
        shortName:
          $ref: "#/components/schemas/LocalizedValue"
        bankReceiverName:
          type: string
          description: Bank receiver name
        group:
          $ref: "#/components/schemas/FundGroup"
        priceDate:
          type: string
          format: date
          description: Price date
        aShareValue:
          description: Share value A
          type: number
          format: double
        bShareValue:
          description: Share value B
          type: number
          format: double
        changeData:
          $ref: "#/components/schemas/ChangeData"
        profitProjection:
          description: Profit projection
          type: number
          format: double
        profitProjectionDate:
          description: Profit projection date
          type: string
          format: date
        color:
          description: Fund color
          type: string
        risk:
          description: Fund risk level
          type: integer
          format: int32
        KIID:
          $ref: "#/components/schemas/LocalizedValue"

    LocalizedValue:
      type: object
      description: Object that contains localized information
      required:
        - fi
        - sv
      properties:
        fi:
          type: string
        sv:
          type: string

    FundGroup:
      type: string
      description: Fund group enum
      enum:
        - PASSIVE
        - ACTIVE
        - BALANCED
        - FIXED_INCOME
        - DIMENSION
        - SPILTAN

    ChangeData:
      type: object
      description: Change data object
      properties:
        change1d:
          description: 1 day change
          type: number
          format: double
        change1m:
          description: 1 month change
          type: number
          format: double
        change1y:
          description: 1 year change
          type: number
          format: double
        change3y:
          description: 3 years change
          type: number
          format: double
        change5y:
          description: 5 years change
          type: number
          format: double
        change10y:
          description: 10 years change
          type: number
          format: double
        change15y:
          description: 15 years change
          type: number
          format: double
        change20y:
          description: 20 years change
          type: number
          format: double

    HistoricalValue:
      type: object
      description: Historical value object
      properties:
        date:
          description: Date of historical value
          type: string
          format: date
        value:
          description: Historical value
          type: number
          format: double

    Portfolio:
      type: object
      description: Portfolio object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        totalAmount:
          type: integer
          format: int64
          description: Total amount in cents
          readOnly: true
        marketValueTotal:
          type: integer
          format: int64
          description: Market total amount in cents
          readOnly: true
        purchaseTotal:
          type: integer
          format: int64
          description: Purchase total amount in cents
          readOnly: true

    PortfolioHistoryValue:
      type: object
      description: Portfolio history object
      properties:
        date:
          type: string
          format: date
          description: History entry date
        value:
          type: integer

    PortfolioSummary:
      type: object
      description: Portfolio statistics object
      required:
        - subscriptions
        - redemptions
      properties:
        subscriptions:
          type: integer
          format: int64
          description: Subscriptions in cents
          readOnly: true
        redemptions:
          type: integer
          format: int64
          description: Redemptions in cents
          readOnly: true

    PortfolioFund:
      type: object
      description: Portfolio fund object
      required:
        - id
        - amount
        - purchaseValue
        - totalValue
      properties:
        id:
          type: string
          format: uuid
          description: Fund ID. Can be used to search fund details.
          readOnly: true
        amount:
          type: number
          format: double
          description: Amount of funds
          readOnly: true
        purchaseValue:
          type: integer
          format: int64
          description: Purchase value in cents
          readOnly: true
        totalValue:
          type: integer
          format: int64
          description: Total value in cents
          readOnly: true