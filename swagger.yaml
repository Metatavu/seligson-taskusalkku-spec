openapi: 3.0.3
info:
  version: 1.0.0
  title: Taskusalkku API-spec

security:
  - bearer: []

paths:
  /v1/system/ping:
    get:
      security: []
      operationId: ping
      summary: Replies with pong
      description: Replies ping with pong
      tags:
        - System
      responses:
        "200":
          description: Pong
          content:
            text/plain:
              schema:
                type: string

  /v1/funds:
    get:
      operationId: listFunds
      summary: List funds.
      description: Lists funds.
      tags:
        - Funds
      parameters:
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
      responses:
        "200":
          description: List of funds
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Fund"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of funds with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/funds/{fundId}":
    get:
      operationId: findFund
      summary: Find a fund.
      description: Finds a fund by id.
      tags:
        - Funds
      parameters:
        - name: fundId
          required: true
          in: path
          description: fund id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Fund
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fund"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/securities:
    get:
      operationId: listSecurities
      summary: List securities.
      description: Lists securities.
      tags:
        - Securities
      parameters:
        - name: seriesId
          in: query
          description: Series id.
          schema:
            type: integer
            format: int32
        - name: fundId
          in: query
          description: Fund ID.
          schema:
            type: string
            format: uuid
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
      responses:
        "200":
          description: List of securities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Security"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of securities with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/securities/{securityId}":
    get:
      operationId: findSecurity
      summary: Find a security.
      description: Finds a security by id.
      tags:
        - Securities
      parameters:
        - name: securityId
          required: true
          in: path
          description: security id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Security
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Security"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/securities/{securityId}/historyValues":
    get:
      operationId: listSecurityHistoryValues
      summary: Lists security history values
      description: Lists security history values
      tags:
        - Securities
      parameters:
        - name: securityId
          required: true
          in: path
          description: security id
          schema:
            type: string
            format: uuid
        - name: firstResult
          in: query
          description: First result. Defaults to 0
          schema:
            type: integer
        - name: maxResults
          in: query
          description: Max results. Defaults to 10
          schema:
            type: integer
        - name: startDate
          in: query
          description: Filter starting from this date
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: Filter ending to this date
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of security history values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/SecurityHistoryValue"
          headers:
            X-Total-Count:
              schema:
                type: integer
                format: int64
              description: Total count of funds with given filters.
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/companies":
    get:
      operationId: listCompanies
      summary: Lists companies
      description: Lists companies
      tags:
        - Companies
      responses:
        "200":
          description: Companies
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Company"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/companies/{companyId}":
    get:
      operationId: findCompany
      summary: Find a company.
      description: Finds a company by id.
      tags:
        - Companies
      parameters:
        - name: companyId
          required: true
          in: path
          description: company id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Company
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Company"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/portfolios:
    get:
      operationId: listPortfolios
      summary: List portfolios.
      description: Lists portfolios logged user has access to
      tags:
        - Portfolios
      parameters:
        - name: companyId
          required: false
          in: query
          description: company id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of portfolios
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Portfolio"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}":
    get:
      operationId: findPortfolio
      summary: Find a portfolio.
      description: Finds a portfolio by id.
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Portfolio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Portfolio"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/summary":
    get:
      operationId: getPortfolioSummary
      summary: Summary for portfolio summary
      description: Returns summary a portfolio history for given time range
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          required: true
          description: Start date for the date range
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: End date for the date range
          schema:
            type: string
            format: date
      responses:
        "200":
          description: Portfolio
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortfolioSummary"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/historyValues":
    get:
      operationId: listPortfolioHistoryValues
      summary: List portfolio history values.
      description: Lists portfolio history values
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          required: true
          description: Start date for the date range
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          required: true
          description: End date for the date range
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of portfolio history values
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortfolioHistoryValue"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/securities":
    get:
      operationId: listPortfolioSecurities
      summary: Lists portfolio funds
      description: Returns list of portfolio funds
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: List of portfolio securities
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortfolioSecurity"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/transactions":
    get:
      operationId: listPortfolioTransactions
      summary: Lists portfolio transactions
      description: Returns list of portfolio transactions
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: portfolio id
          schema:
            type: string
            format: uuid
        - name: startDate
          in: query
          description: Start date for the date range
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date for the date range
          schema:
            type: string
            format: date
        - name: transactionType
          in: query
          description: Transaction type
          schema:
            $ref: "#/components/schemas/TransactionType"
      responses:
        "200":
          description: List of portfolio transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PortfolioTransaction"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  "/v1/portfolios/{portfolioId}/transactions/{transactionId}":
    get:
      operationId: findPortfolioTransaction
      summary: Finds portfolio transaction
      description: Returns found portfolio transaction
      tags:
        - Portfolios
      parameters:
        - name: portfolioId
          required: true
          in: path
          description: Portfolio id
          schema:
            type: string
            format: uuid
        - name: transactionId
          required: true
          in: path
          description: Transaction id
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: Found portfolio transaction
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PortfolioTransaction"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/meetingTimes:
    get:
      operationId: ListMeetingTimes
      summary: Lists meeting times
      description: Returns list of meeting times
      tags:
        - Meetings
      parameters:
        - name: startDate
          in: query
          description: Start date for the date range
          schema:
            type: string
            format: date
        - name: endDate
          in: query
          description: End date for the date range
          schema:
            type: string
            format: date
      responses:
        "200":
          description: List of meeting times
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MeetingTime"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /v1/meetings:
    post:
      operationId: createMeeting
      summary: Create a meeting.
      description: Creates a new meeting.
      tags:
        - Meetings
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Meeting"
        description: Payload
        required: true
      responses:
        "200":
          description: Created Meeting
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Meeting"
        "400":
          description: Invalid request was sent to the server
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "403":
          description: Attempted to make a call with unauthorized client
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Error:
      type: object
      description: Error object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Fund:
      type: object
      description: Fund object
      required:
        - longName
        - shortName
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
          description: Fund object id in UUID format
        longName:
          $ref: "#/components/schemas/LocalizedValue"
        shortName:
          $ref: "#/components/schemas/LocalizedValue"
        group:
          $ref: "#/components/schemas/FundGroup"
        priceDate:
          type: string
          format: date
          description: Price date
        aShareValue:
          description: Share value A
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        bShareValue:
          description: Share value B
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        changeData:
          $ref: "#/components/schemas/ChangeData"
        profitProjection:
          description: Profit projection
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        profitProjectionDate:
          description: Profit projection date
          type: string
          format: date
        color:
          description: Fund color
          type: string
        risk:
          description: Fund risk level
          type: integer
          format: int32
        KIID:
          $ref: "#/components/schemas/LocalizedValue"
        subscriptionBankAccounts:
          description: Subscription bank accounts
          type: array
          items:
            $ref: "#/components/schemas/SubscriptionBankAccount"
        subscribable:
          type: boolean
          description: subscribable

    SubscriptionBankAccount:
          type: object
          description: Subscription Bank Account object
          properties:
            BankAccountName:
              description: Bank account name
              type: string
            IBAN:
              description: IBAN
              type: string
            AccountNumberOldFormat:
              description: account number old format
              type: string
            BIC:
              description: BIC
              type: string
            Currency:
              description: Currency
              type: string

    LocalizedValue:
      type: object
      description: Object that contains localized information
      required:
        - fi
        - sv
      properties:
        fi:
          type: string
        sv:
          type: string
        en:
          type: string

    FundGroup:
      type: string
      description: Fund group enum
      enum:
        - PASSIVE
        - ACTIVE
        - BALANCED
        - FIXED_INCOME
        - DIMENSION
        - SPILTAN

    ChangeData:
      type: object
      description: Change data object
      properties:
        change1d:
          description: 1 day change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change1m:
          description: 1 month change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change1y:
          description: 1 year change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change3y:
          description: 3 years change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change5y:
          description: 5 years change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change10y:
          description: 10 years change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change15y:
          description: 15 years change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
        change20y:
          description: 20 years change
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/

    SecurityHistoryValue:
      type: object
      description: Security history value object
      properties:
        date:
          type: string
          format: date
          description: History entry date
        value:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: History entry value in euros
          readOnly: true

    Company:
      type: object
      description: Company object
      required:
        - name
        - accessLevel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        accessLevel:
          $ref: "#/components/schemas/CompanyAccessLevel"

    CompanyAccessLevel:
      type: string
      enum:
        - OWNED
        - SHARED

    Portfolio:
      type: object
      description: Portfolio object
      required:
        - name
        - accessLevel
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        companyId:
          type: string
          format: uuid
          readOnly: true
        name:
          type: string
        accessLevel:
          $ref: "#/components/schemas/CompanyAccessLevel"
        totalAmount:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Total amount in euros
          readOnly: true
        marketValueTotal:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Market total amount in euros
          readOnly: true
        purchaseTotal:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Purchase total amount in euros
          readOnly: true
        aReference:
          type: string
          pattern: /^[0-9]{12,27}$
          description: Reference value A
          readOnly: true
        bReference:
          type: string
          pattern: /^[0-9]{12,27}$
          description: Reference value B
          readOnly: true

    PortfolioHistoryValue:
      type: object
      description: Portfolio history value object
      properties:
        date:
          type: string
          format: date
          description: History entry date
        value:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: History entry value in euros
          readOnly: true

    PortfolioSummary:
      type: object
      description: Portfolio statistics object
      required:
        - subscriptions
        - redemptions
      properties:
        subscriptions:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Subscriptions in euros
          readOnly: true
        redemptions:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Redemptions in euros
          readOnly: true

    PortfolioSecurity:
      type: object
      description: Portfolio fund object
      required:
        - id
        - amount
        - purchaseValue
        - totalValue
      properties:
        id:
          type: string
          format: uuid
          description: security ID. Can be used to search security details.
          readOnly: true
        amount:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Amount of funds
          readOnly: true
        purchaseValue:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Purchase value in euros
          readOnly: true
        totalValue:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Total value in euros
          readOnly: true

    PortfolioTransaction:
      type: object
      description: Portfolio transaction object
      required:
        - fundId
        - transactionType
        - valueDate
        - value
        - shareAmount
        - marketValue
        - totalValue
        - provision
      properties:
        id:
          type: string
          format: uuid
          description: Portfolio transaction ID in UUID format
          readOnly: true
        securityId:
          type: string
          format: uuid
          description: Security ID
          readOnly: true
        targetSecurityId:
          type: string
          format: uuid
          description: Target security ID. Only available when transaction type is security
          readOnly: true
        transactionType:
          $ref: "#/components/schemas/TransactionType"
        valueDate:
          type: string
          format: date
          description: Date of fund value
          readOnly: true
        value:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Fund value in euros
          readOnly: true
        shareAmount:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Total share amount
          readOnly: true
        marketValue:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Market value in euros
          readOnly: true
        totalValue:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Total value in euros
          readOnly: true
        paymentDate:
          type: string
          format: date
          description: Date when transaction is completed
          readOnly: true
        provision:
          type: string
          pattern: /^[+-]?([0-9]+\.?[0-9]*|\.[0-9]+)$/
          description: Provision price in euros
          readOnly: true

    Security:
      type: object
      description: Security object
      required:
        - name
        - currency
        - fundId
      properties:
        id:
          type: string
          format: uuid
          description: Security ID
        fundId:
          type: string
          format: uuid
          description: Fund ID
        name:
          $ref: "#/components/schemas/LocalizedValue"
        currency:
          type: string
          description: string

    TransactionType:
      type: string
      description: Transaction type enum
      enum:
        - SUBSCRIPTION
        - REDEMPTION
        - SECURITY

    MeetingTime:
      type: object
      description: Meeting time object
      required:
        - startTime
        - endTime
      properties:
        startTime:
          type: string
          format: date-time
          description: Start date-time of meeting
        endTime:
          type: string
          format: date-time
          description: End date-time of meeting

    Meeting:
      type: object
      description: Meeting object
      required:
        - type
        - time
        - language
        - participantCount
        - contact
      properties:
        type:
          $ref: "#/components/schemas/MeetingType"
        time:
          type: string
          format: date-time
          description: Meeting time
        language:
          type: string
          description: Language in ISO-639-1 format
        participantCount:
          type: integer
          format: int32
          description: Participant count
        contact:
          $ref: "#/components/schemas/MeetingContact"
        additionalInformation:
          type: string
          description: Additional information

    MeetingType:
      type: string
      description: Meeting type enum
      enum:
        - MEETING
        - PHONE

    MeetingContact:
      type: object
      description: Meeting contact object
      required:
        - firstName
        - lastName
      properties:
        firstName:
          type: string
          description: First name
        lastName:
          type: string
          description: Last name
        email:
          type: string
          format: email
          description: Email
        phone:
          type: string
          description: Phone number